/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.generated.tables.User;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record9<Integer, String, String, String, Integer, JSON, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>otus.user.id</code>.
     */
    public UserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>otus.user.login</code>.
     */
    public UserRecord setLogin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.login</code>.
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>otus.user.first_name</code>.
     */
    public UserRecord setFirstName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>otus.user.last_name</code>.
     */
    public UserRecord setLastName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>otus.user.age</code>.
     */
    public UserRecord setAge(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>otus.user.interests</code>.
     */
    public UserRecord setInterests(JSON value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.interests</code>.
     */
    public JSON getInterests() {
        return (JSON) get(5);
    }

    /**
     * Setter for <code>otus.user.city</code>.
     */
    public UserRecord setCity(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.city</code>.
     */
    public String getCity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>otus.user.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.password</code>.
     */
    public String getPassword() {
        return (String) get(7);
    }

    /**
     * Setter for <code>otus.user.gender</code>.
     */
    public UserRecord setGender(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>otus.user.gender</code>.
     */
    public String getGender() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, Integer, JSON, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, Integer, JSON, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return User.USER.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.LAST_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return User.USER.AGE;
    }

    @Override
    public Field<JSON> field6() {
        return User.USER.INTERESTS;
    }

    @Override
    public Field<String> field7() {
        return User.USER.CITY;
    }

    @Override
    public Field<String> field8() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field9() {
        return User.USER.GENDER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public Integer component5() {
        return getAge();
    }

    @Override
    public JSON component6() {
        return getInterests();
    }

    @Override
    public String component7() {
        return getCity();
    }

    @Override
    public String component8() {
        return getPassword();
    }

    @Override
    public String component9() {
        return getGender();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public Integer value5() {
        return getAge();
    }

    @Override
    public JSON value6() {
        return getInterests();
    }

    @Override
    public String value7() {
        return getCity();
    }

    @Override
    public String value8() {
        return getPassword();
    }

    @Override
    public String value9() {
        return getGender();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserRecord value5(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public UserRecord value6(JSON value) {
        setInterests(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setCity(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value9(String value) {
        setGender(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, String value4, Integer value5, JSON value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String login, String firstName, String lastName, Integer age, JSON interests, String city, String password, String gender) {
        super(User.USER);

        setId(id);
        setLogin(login);
        setFirstName(firstName);
        setLastName(lastName);
        setAge(age);
        setInterests(interests);
        setCity(city);
        setPassword(password);
        setGender(gender);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(org.jooq.generated.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setId(value.getId());
            setLogin(value.getLogin());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setAge(value.getAge());
            setInterests(value.getInterests());
            setCity(value.getCity());
            setPassword(value.getPassword());
            setGender(value.getGender());
        }
    }
}
